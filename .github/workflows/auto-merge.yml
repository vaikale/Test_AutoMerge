name: Auto Merge

on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted
  check_suite:
    types:
      - completed
  status: {}

jobs:
  automerge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Ensure PR is mergeable
        id: mergeable
        env:
          GH_TOKEN: ${{ github.token }} 
        run: |
           mergeable=$(gh pr view ${{ github.event.pull_request.number }} --json mergeable --jq .mergeable)

           if [ "$mergeable" = "false" ]; then
             echo "Pull request is not mergeable."
             exit 1
           elif [ "$mergeable" = "null" ]; then
            echo "Mergeable state is unknown. Please check the PR status."
            exit 1
           else
            echo "Pull request is mergeable."
           fi
      - name: Debug Permissions
        run: |
          echo "GITHUB_TOKEN permissions"
          curl -H "Authorization: Bearer ${{github.token }}" https://api.github.com/user

      - name: Automerge Script
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
            });
             if (pr.mergeable_state === "dirty") {
                console.log("Pull request has merge conflicts.");
                return;
             }
             if(pr.mergeable){
                console.log("okay");
             }
             
            if (pr.mergeable) {
             await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                merge_method: "squash",
                commit_title: "Auto-merged by GitHub Actions"
            });
            } else {
              console.log("Pull request is not mergeable.");
             }

